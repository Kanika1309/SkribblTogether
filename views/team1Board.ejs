<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/team1Board.css">
    <title>Board</title>
</head>
<body>
    <div class="members">
        <% for(var i=0; i<team1.length+1; i++) { %>
            <% if(i==0) { %>
                <div id="member">Team 1</div>
            <% } else { %>
                <div id="member"><%= team1[i-1].userName %></div>
            <% } %>
        <% } %>
    </div>
    <div class="phrase"><%= phrase %></div>
    <div class="drawing-board">
        <canvas id="drawing-board"></canvas>
    </div>
    <div class="link">
        <a><%= roomName %></a>
    </div>
    <div class="input">
        <div id="inputOption">
            <form action="/api/submit" method="POST" id="form">
                <label id="guessLabel" for="guess">GUESS</label>
                <input id="guess" type="text" placeholder="Guess the phrase.">
                <button id="submit" type="submit" visiblity="hidden" class="btn btn-success">SUBMIT</button>
            </form>
            <!-- <label for="linewidth">LINEWIDTH</label>
            <input id="linewidth" name='linewidth' type="number" value="5"> -->
            <% if(roomAdmin) { %>
            <button id="start" type="start" formaction="" class="btn btn-success">START</button>
            <% } %>
            <button id="clear" type="clear" >CLEAR</button>
            <div id="timer" >00:30</div>
        </div>
    </div>
    <script src="/socket.io/socket.io.js"></script>
    <!-- <script src="/views/app.js"></script> -->
    <script>
            var members = document.querySelector('.members')
            const canvas = document.getElementById('drawing-board');
            const inputOption = document.getElementById('inputOption');
            const phrase = document.querySelector('.phrase');
            const clear = document.querySelector('#clear');
            const guessLabel = document.querySelector('#guessLabel');
            const guess = document.querySelector('#guess');
            const start = document.querySelector('#start');
            const submit = document.querySelector('#submit');
            const member = document.querySelector('#member');
            const timer = document.querySelector('#timer');
            const form = document.querySelector('#form');

            const canvasOffsetX = canvas.offsetLeft;
            const canvasOffsetY = canvas.offsetTop;
            canvas.width = window.innerWidth - canvasOffsetX;
            canvas.height = window.innerHeight - canvasOffsetY;
            // var io = require("socket.io-client");
            var io = io.connect('/team1Board');

            const ctx = canvas.getContext('2d');

            let isPainting = false;
            let lineWidth = 5;
            let startX;
            let startY;
            
            var user = <%- JSON.stringify(user) %>;
            io.emit("updateMembers", {user: user})

            io.on("onUpdateMembers", (data) => {
                // console.log("team");
                var newDiv = document.createElement('div');
                // console.log("inner")
                newDiv.textContent = data.user.userName;
                // console.log(newDiv)
                members.appendChild(newDiv);
            });

            io.on("timer",(data) => {
                alert(data.msg);
                var timeLeft = 30;
                var timerId = setInterval(countdown, 1000);
                function countdown() {
                    if (timeLeft == 0) {
                        clearTimeout(timerId);
                        timer.innerHTML = 'Time Over';
                        canvas.style.pointerEvents="none";
                    } else {
                        // if(timeLeft<=30 && timeLeft>20){
                        // }
                        if(timeLeft < 10) {
                            timeLeft = 0 + '' + timeLeft;
                        }
                            
                        timer.innerHTML = '00:' + timeLeft;
                            
                        timeLeft -= 1;
                    }
                }
            })
            io.on("onclear", ({w, h}) => {
                ctx.clearRect(0, 0, w, h);
            })
            io.on("start", () => {
                phrase.style.display="block";
                clear.style.display="inline-block";
                timer.style.display="inline-block";
                canvas.style.pointerEvents="auto";
            })
            io.on("self", () => {
                start.style.display="none";
                form.style.display="inline-block"
                guessLabel.style.display="inline-block";
                guess.style.display="inline-block";
                submit.style.display="inline-block";
                timer.style.display="inline-block";
            })
            io.on("onsubmit", (data) => {
                alert(data)
                submit.click();
            })
            inputOption.addEventListener('click', e => {
                if (e.target.id === 'clear') {
                    w = canvas.width;
                    h =  canvas.height;
                    io.emit("clear", { w, h });
                    ctx.clearRect(0, 0, w, h);
                }
                if (e.target.id === 'start') {
                    io.emit("start", {})
                }
                if (e.target.id === 'submit') {
                    io.emit("submit", {})
                }
            });

            io.on("ondown", () => {
                isPainting = true;
                // console.log("on2down")
            })

            canvas.addEventListener('mousedown', (e) => {
                isPainting = true;
                startX = e.clientX;
                startY = e.clientY;
                // console.log("down2")
                io.emit("down");
            });

            io.on("onup", () => {
                isPainting = false;
                ctx.stroke();
                ctx.beginPath();
                // console.log("onup2")
            })

            canvas.addEventListener('mouseup', e => {
                isPainting = false;
                // console.log("up2")
                io.emit("up");
                ctx.stroke();
                ctx.beginPath();
            });

            io.on("ondraw", ({x, y}) => {
                // console.log(x,y)
                ctx.lineWidth = lineWidth;
                ctx.lineCap = 'round';
                ctx.lineTo(x, y);
                ctx.stroke();
            })

            canvas.addEventListener('mousemove', (e) => {
                if(!isPainting) {
                    return;
                }

                x = e.clientX;
                y = e.clientY;
                ctx.lineWidth = lineWidth;
                ctx.lineCap = 'round';

                io.emit("draw", { x, y});
                ctx.lineTo(x, y);
                ctx.stroke();
            });
    </script>
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js"></script> -->
</body>
</html>